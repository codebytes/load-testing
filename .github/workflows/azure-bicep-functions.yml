# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy dotnet core app to Azure Function App - azltops-func

on:
  push:
    branches:
      - main
    # paths:
    #   - 'project/**'
  workflow_dispatch:

permissions:
      id-token: write
      contents: read
      
env:
  AZURE_BICEP_PATH: 'project/bicep' # set this to the path to your web app project, defaults to the repository root
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'project/api' # set this to the path to your web app project, defaults to the repository root
  AZURE_WEBAPP_PACKAGE_PATH: 'project/webapp'
  DOTNET_VERSION: '6.0.x' # set this to the dotnet version to use
  LOAD_TEST_CONFIG: 'project/tests/LoadTestConfig.yaml'
  LOCATION: 'eastus'
  
jobs:
  deploy-iac:
    runs-on: ubuntu-latest
    concurrency: demo_environment
    outputs:
      functionAppName: ${{ steps.deploy.outputs.functionAppName }}
      functionAppUrl: ${{ steps.deploy.outputs.functionAppUrl }}
      nodeWebAppName: ${{ steps.deploy.outputs.nodeWebAppName }}
      loadTestName: ${{ steps.deploy.outputs.loadTestName }}
    steps:
      - uses: actions/checkout@v4

      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Create Resource Group
        uses: azure/powershell@v1
        continue-on-error: false
        with:
          inlineScript: |
            az group create --name "${{ vars.AZURE_RG }}" --location "${{ env.LOCATION }}"
          azPSVersion: "latest"      
      - name: Deploy Azure Resource Manager (ARM) Template
        id: deploy
        uses: Azure/arm-deploy@v2
        with:
          resourceGroupName: ${{ vars.AZURE_RG }}
          template: 'project/bicep/main.bicep'
  build-and-deploy-backend:
    needs: deploy-iac
    concurrency: demo_environment_backend
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout GitHub Action'
        uses: actions/checkout@v4
      - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: 'Resolve Project Dependencies Using Dotnet'
        shell: pwsh
        run: |
          pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: 'Run Azure Functions Action'
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ needs.deploy-iac.outputs.functionAppName }} #'azltops-func'
          slot-name: 'production'
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'
  build-and-deploy-frontend:
    needs: deploy-iac
    concurrency: demo_environment_frontend
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: create env file
      run: |
        cd ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
        touch .env.production
        echo VUE_APP_COSTUMES_API_URL="https://${{ needs.deploy-iac.outputs.functionAppUrl }}/api" >> .env.production

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        cache-dependency-path: project/webapp/package-lock.json

    - name: npm install, build, and test
      run: |
        npm install
        npm run build --if-present
        npm run test --if-present
      working-directory: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}
    - name: 'Az CLI login'
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    - name: 'Deploy to Azure WebApp'
      id: deploy-to-webapp 
      uses: azure/webapps-deploy@v3
      with:
        app-name: ${{ needs.deploy-iac.outputs.nodeWebAppName }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}/dist
  loadTest:
    name: Load Test
    needs: [deploy-iac, build-and-deploy-backend, build-and-deploy-frontend]
    concurrency: demo_environment_load
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      
      - name: 'Azure Load Testing'
        uses: azure/load-testing@v1
        with:
          loadTestConfigFile: ${{ env.LOAD_TEST_CONFIG }}
          loadTestResource: ${{ needs.deploy-iac.outputs.loadTestName }}
          resourceGroup: ${{ vars.AZURE_RG }}
          env: |
            [
              {
              "name": "apiurl",
              "value": "${{ needs.deploy-iac.outputs.functionAppUrl }}"
              }
            ]          
      
      - uses: actions/upload-artifact@v4
        with:
          name: loadTestResults
          path: ${{ github.workspace }}/loadTest