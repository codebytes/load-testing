# This is a basic workflow to help you get started with Actions

name: Sample App deploy

# Controls when the workflow will run
on:
  push:
      branches:
        - main

permissions:
  id-token: write
  contents: read
  
env:
  AZURE_WEBAPP_NAME: "cayers-lt-demo"    # set this to your application's name
  LOAD_TEST_RESOURCE: "cayers-demo-lt-service"
  LOAD_TEST_RESOURCE_GROUP: "rg-lt-demo"
  AZURE_WEBAPP_PACKAGE_PATH: 'demo/src'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '14.15.1'                # set this to the node version to use
  LOCATION: "eastus"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    concurrency: demo_environment

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout GitHub Actions 
        uses: actions/checkout@v2
        
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Create Resource Group
        uses: azure/powershell@v1
        continue-on-error: false
        with:
          inlineScript: |
            az group create --name "${{ env.LOAD_TEST_RESOURCE_GROUP }}" --location "${{ env.LOCATION }}"
          azPSVersion: "latest"      
  
    # Deploy Arm template
      - name: Deploy Azure Resource Manager (ARM) Template
        id: deploy
        uses: Azure/arm-deploy@v1
        with:
          resourceGroupName: ${{ env.LOAD_TEST_RESOURCE_GROUP }}
          template: 'demo/infra/main.bicep'
          parameters: webAppName=${{ env.AZURE_WEBAPP_NAME }}
            
      - name: 'Deploy to Azure WebApp'
        uses: azure/webapps-deploy@v2
        with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}

  loadTest:
    name: Load Test
    needs: build-and-deploy
    concurrency: demo_environment
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GitHub Actions 
        uses: actions/checkout@v2
          
      - name: 'Az CLI login'
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Create Resource Group
        uses: azure/powershell@v1
        continue-on-error: false
        with:
          inlineScript: |
            az group create --name "${{ env.LOAD_TEST_RESOURCE_GROUP }}" --location "${{ env.LOCATION }}"
          azPSVersion: "latest"      
          
      - name: Create Azure Load Testing resource
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{ env.LOAD_TEST_RESOURCE_GROUP }}
          template: ./demo/infra/loadtest.bicep
          parameters: loadTestName=${{ env.LOAD_TEST_RESOURCE }}
          
      - name: 'Azure Load Testing'
        uses: azure/load-testing@v1
        with:
          loadTestConfigFile: 'demo/tests/SampleApp.yaml'
          loadTestResource: ${{ env.LOAD_TEST_RESOURCE }}
          resourceGroup: ${{ env.LOAD_TEST_RESOURCE_GROUP }}
          env: |
            [
              {
              "name": "webapp",
              "value": "${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"
              }
            ]          
      
      - uses: actions/upload-artifact@v3
        with:
          name: loadTestResults
          path: ${{ github.workspace }}/loadTest
